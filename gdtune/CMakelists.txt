project(gdtune)

#set(RTMIDI_API_WINMM ON)
add_compile_options(/utf-8)

#add_definitions(-DRTMIDI_API_WINMM=ON)
add_definitions(-D__WINDOWS_MM__ -DRTMIDI_DEBUG)

# Automatically pick up files added to src
file(GLOB_RECURSE SOURCES CONFIGURE_DEPENDS
        "${CMAKE_CURRENT_SOURCE_DIR}/src/*.h"
        "${CMAKE_CURRENT_SOURCE_DIR}/src/*.hpp"
        "${CMAKE_CURRENT_SOURCE_DIR}/src/*.cpp")

# Add a dynamic library called gdtune - this builds gdtune.dll
add_library(${PROJECT_NAME} SHARED ${SOURCES}

)



#../libs/jsoncpp/src/lib_json/json_reader.cpp
#../libs/jsoncpp/src/lib_json/json_value.cpp
#../libs/jsoncpp/src/lib_json/json_writer.cpp

target_include_directories(${PROJECT_NAME}
PRIVATE
"${CMAKE_CURRENT_SOURCE_DIR}/src"
#"${CMAKE_CURRENT_SOURCE_DIR}/../rtmidi-6.0.0/"
"${CMAKE_CURRENT_SOURCE_DIR}/../libs/clap-1.2.2/include/"
"${CMAKE_CURRENT_SOURCE_DIR}/../libs/clap-helpers/include/"
"${CMAKE_CURRENT_SOURCE_DIR}/../libs/jsoncpp/include/"
"${CMAKE_CURRENT_SOURCE_DIR}/../libs/spdlog-1.x/include/"

)

#"target_compile_options(jsoncpp PRIVATE $<$<CXX_COMPILER_ID:GNU>:-Wno-deprecated-declarations>)


# replace if ASIO support
#target_include_directories(${PROJECT_NAME} PRIVATE "${CMAKE_CURRENT_SOURCE_DIR}/src"
#"C:/MyData/Works40s/Programing/VST3SDK/asiosdk_2.3.3_2019-06-14/asiosdk_2.3.3_2019-06-14/common/")

target_link_libraries(${PROJECT_NAME} 
PRIVATE
    godot::cpp
    winmm
    "${CMAKE_CURRENT_SOURCE_DIR}/../libs/jsoncpp_static.lib"
    "${CMAKE_CURRENT_SOURCE_DIR}/../libs/spdlogd.lib"
    #spdlog::spdlog_static
#    "${CMAKE_CURRENT_SOURCE_DIR}/../rtmidi-6.0.0/build/Debug/rtmidi.lib"
)

source_group(TREE "${CMAKE_CURRENT_SOURCE_DIR}/src" PREFIX src FILES ${SOURCES})